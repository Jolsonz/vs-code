集合覆盖问题。
用贪婪算法
1. 先重定向输入，得先把数据的对应关系给反一下，变成监控摄像头对应点的集合Camera。
2. 先生成bool v[m]={false},代表m个元素全都未被监控访问到，即初始化
3. 然后遍历Camera每次选择包含最多未被访问点的camera[max]
4. 把v[m]中包含camera[max]内的元素全都标记为true，即已访问
5. m-camera[max]内的元素
5. 把Camera[max]置空，因为它被使用过了，同时把i放入ans
6. 跳到3重复，直到为m=0。
6. 输出ans的长度（所需监控个数），以及每个ans的元素（监控的编号）

伪码表示：
vector<vector<int> > camera(n);//n个摄像头对应的点集给输入进来
bool v[m]={false};
int rest=m;
vector<int> ans;//放结果
while(rest!=0){
    int max_num = 0;//记录交集最大集合的Camera编号
    int max_jiao = 0;//记录最大交集的个数
    for(int i=0;i<n;i++){
        if(max_jiao > camera[i].size()) continue;//说明不用找,现有交集比较大
        int temp=0;
        for(auto j : camera[i]){ 
            if(!v[j]) temp++;
        }
        if(temp>max_jiao){//比之前的交集大。
            max_jiao=temp;
            max_num=i;
        }
    }
    for(auto j: camera[max_num]) v[j]=true;
    camera[max_num].clear();//用过就清除
    ans.push_back(max_num);
    rest-=max_jiao; 
    }
cout<<ans.size();//输出结果
for(auto i : ans) cout<<i<<' ';//输出下标


有个小问题，SC01,SC03,SC05在用devc++运行的时候
有时候结束运行之后没有输出值，但我看任务管理器它已经运行完了
然后按ctl+c会瞬间跳出输出值后结束。但是多次运行偶尔能显示输出值，原因不明。
可能是电脑问题吧。